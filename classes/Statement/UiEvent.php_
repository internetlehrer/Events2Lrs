<?php
namespace ILIAS\Plugin\Events2Lrs\Statement;

use ilCmiXapiDateTime;
use ilCmiXapiLrsType;
use ILIAS\Plugin\Events2Lrs\Xapi\Statement\XapiStatement;
use ilLink;
use ilObject;
use ilObjUser;


class UiEvent extends AbstractStatement
{
    /**
     * @var array
     */
    protected $queryParams;

    /**
     * @var array
     */
    protected $urlParams;

    public function __construct(ilCmiXapiLrsType $lrsType, array $eventParam = [])
    {

        $eventParam['event'] = 'uiEvent';

        parent::__construct($lrsType, $eventParam);

        parse_str(parse_url($this->dic->http()->request()->getParsedBody()['UrlH5PModule'])["query"], $this->urlParams);

        $this->queryParams = $this->dic->http()->request()->getParsedBody()['queryParamH5PModule'];

    }

    public function buildResult(): ?array
    {
        $result = [];

        $duration = "";

        $response = "";

        $completion = "";

        $success = "";

        if ($score = $this->dic->http()->request()->getParsedBody()['result']['score'] ?? null) {

            $result =
            [
                'score' => [
                    'scaled' => (float) $score['scaled'],
                    'raw' => (float) $score['raw'],
                    'min' => (float) $score['min'],
                    'max' => (float) $score['max']
                ]
            ];
        }

        if ($localContentDuration = $this->dic->http()->request()->getParsedBody()['result']['duration'] ?? null) {

            $result['duration'] = $localContentDuration;

        }

        if ($response = $this->dic->http()->request()->getParsedBody()['result']['response'] ?? null) {

            $result['response'] = $response;

        }

        if ($completion = $this->dic->http()->request()->getParsedBody()['result']['completion'] ?? null) {

            $result['completion'] = "true" === $completion;

        }

        if ($success = $this->dic->http()->request()->getParsedBody()['result']['success'] ?? null) {

            $result['success'] = "true" === $success;

        }

        return $result;


    }

    public function buildVerb(): array
    {
        $verb = $this->dic->http()->request()->getParsedBody()['verb'];
/*
        if ($localContentSuccess = $this->dic->http()->request()->getParsedBody()['result']['success'] ?? null) {

            if ($localContentSuccess == "true") {

                $verb['id'] = 'http://adlnet.gov/expapi/verbs/passed';
                $verb['display']['en-US'] = 'passed';
            }

            if ($localContentSuccess == "false") {

                $verb['id'] = 'http://adlnet.gov/expapi/verbs/failed';

                $verb['display']['en-US'] = 'failed';

            }
        }
        */

        return $verb;

    }

    public function getObjectPermaLink(ilObject $object, bool $withObjId = true): string
    {

        #$this->dic->logger()->root()->dump($this->eventParam);

        if($object->getType() !== 'lm' && $object->getType() !== 'copa' && !($this->eventParam['queryParamH5PModule']['gotoLink'] ?? false)) {

            return parent::getObjectPermaLink($object, $withObjId);

        }

        $stringIds = '';

        $objId = $object->getId();

        if($withObjId) {

            if ($localContentId = $this->dic->http()->request()->getParsedBody()['object']['definition']['extensions'] ?? null) {

                $stringIds .= '&h5p_object_id=' . array_pop($localContentId);

            }

            $stringIds .= "&obj_id_lrs=$objId";

        }

        if($gotoLink = $this->eventParam['uiEventData']['queryParamH5PModule']['gotoLink'] ?? null) {

            return $gotoLink . $stringIds;

        }

        if('illmpresentationgui' === strtolower($this->urlParams['cmdClass'])) {

            $targetRef = $this->urlParams['obj_id'] . '_' . $this->urlParams['ref_id'];

            return ilLink::_getLink($targetRef, 'pg') .  $stringIds;

        }

        return ilLink::_getLink($object->getRefId(), $object->getType()) . $stringIds;

    }

    public function getObjectProperties(ilObject $object): array
    {
        $name = $object->getTitle(); //evtl. ergaenzen: $object->getType()

        if($object->getType() == 'lm') {

            $name = $object->getTitle() . $this->getLMDataTitle();

        }
        if($object->getType() == 'lm' || $object->getType() == 'copa') { //add wiki ...

            if ($localContentId = $this->dic->http()->request()->getParsedBody()['object']['definition']['extensions'] ?? null) {

                $name .= ': H5P-' . array_pop($localContentId);

            }

            if ($localContentName = $this->dic->http()->request()->getParsedBody()['object']['definition']['name'] ?? null) {

                $name .= ' ' . array_pop($localContentName);
            }

            if ($localContentScore = $this->dic->http()->request()->getParsedBody()['result']['score']['scaled'] ?? null) {

                $name .= ' (' . ((float) $localContentScore * 100) . '%)';
            }
        }


        $objectProperties = [
            'id' => $this->getObjectPermaLink($object),
            'definition' => [
                'name' => [$this->getLocale() => $name],
                'type' => $this->getObjectDefinitionType($object)
            ]
        ];

        if( $object->getDescription() != '')
        {
            $objectProperties['definition']['description'] = [$this->getLocale() => $object->getDescription()];
        }

        return $objectProperties;
    }

    private function getLMDataTitle() : string
    {
        $db = $this->dic->database();

        $lmId = ilObject::_lookupObjId($this->urlParams['ref_id']);

        $sql = "SELECT title FROM lm_data WHERE obj_id = " . $db->quote($this->urlParams['obj_id'], 'integer') .
            " AND lm_id = " . $db->quote($lmId, 'integer');

        $res = $db->query($sql);

        $row = $db->fetchAssoc($res);

        return ($row['title'] ?? false) ? ': ' . $row['title'] : '';
    }

}